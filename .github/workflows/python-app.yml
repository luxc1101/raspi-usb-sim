# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python USBTool CI

on:
  push:
      tags:
        - 'v*.*.*'   # Trigger on version tags like v1.0.0

env:
  APP_DIR: 'app'
  ARTIFACTS_DIR: 'dist'
  ARTIFACTS_NAME: 'USBSimulator'
  USBTOOL_INSTALL: 'usbtool_install'
  ZIP_NAME: 'usb-tool_${{ github.ref_name }}.zip'
  WIFI_CONFIG: '${{ github.workspace }}/wificonfig'
  PACKAGE_REGISTRY_URL: 'https://github.com/${{ github.repository }}/packages' # Adjust as needed

jobs:
  release-app:
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.11'

      - name: Install Poetry
        run: |
          pip install poetry
          poetry self add poetry-plugin-shell

      - name: Install Dependencies
        run: |
          if (Test-Path "poetry.lock") { Remove-Item "poetry.lock" }
          poetry install
        shell: pwsh

      - name: Build with PyInstaller
        run: |
          cd $env:APP_DIR
          poetry run pyrcc5 ProQrc.qrc -o Icons.py
          poetry run pyinstaller --onefile --windowed --noconsole --name "USBSimulator" --icon=AppIcon.ico --log-level=DEBUG .\Main.py
        shell: pwsh
      
      - name: Archive files
        run: |
          cd $env:APP_DIR
          New-Item -Path "$env:ARTIFACTS_DIR\$env:USBTOOL_INSTALL" -ItemType Directory -Force
          Copy-Item "Config.json" -Destination "$env:ARTIFACTS_DIR"
          Copy-Item "device_proj.json" -Destination "$env:ARTIFACTS_DIR"
          Copy-Item "$env:WIFI_CONFIG" -Destination "$env:ARTIFACTS_DIR" -Recurse -Force
          Copy-Item "src" -Destination "$env:ARTIFACTS_DIR\$env:USBTOOL_INSTALL" -Recurse -Force
          Copy-Item "device_proj.json" -Destination "$env:ARTIFACTS_DIR\$env:USBTOOL_INSTALL"
          Copy-Item "scripts/*" -Destination "$env:ARTIFACTS_DIR\$env:USBTOOL_INSTALL" -Recurse -Force
        shell: pwsh

      - name: Deploy to local folder and zip
        run: |
          cd $env:APP_DIR
          Compress-Archive -Path $env:ARTIFACTS_DIR -DestinationPath $env:ZIP_NAME
        shell: pwsh

      - name: Upload ZIP to GitHub Releases
        uses: actions/upload-artifact@v4
        with:
          path: ${{ env.APP_DIR }}/${{ env.ZIP_NAME }}

      - name: Generate Release Notes
        run: |
          $desc = poetry run python "$env:ROOT_DIR\release_description_helper.py" "${{ github.ref_name }}"
          echo "RELEASE_DESCRIPTION=$desc" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        shell: pwsh

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: "usbtool-${{ github.ref_name }}"
          tag_name: ${{ github.ref_name }}
          body: ${{ env.RELEASE_DESCRIPTION }}
          files: ${{ env.APP_DIR }}/${{ env.ZIP_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
